<?php

namespace Conjoon\Data\Entity\Proxy\__CG__\Conjoon\Data\Entity\Mail;

/**
 * @see Conjoon\Data\Entity\EntityProxy
 */
require_once 'Conjoon/Data/Entity/EntityProxy.php';


/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class DefaultMessageFlagEntity extends \Conjoon\Data\Entity\Mail\DefaultMessageFlagEntity
    implements \Doctrine\ORM\Proxy\Proxy, Conjoon\Data\Entity\EntityProxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }


    public function setIsRead($isRead)
    {
        $this->__load();
        return parent::setIsRead($isRead);
    }

    public function getIsRead()
    {
        $this->__load();
        return parent::getIsRead();
    }

    public function setIsSpam($isSpam)
    {
        $this->__load();
        return parent::setIsSpam($isSpam);
    }

    public function getIsSpam()
    {
        $this->__load();
        return parent::getIsSpam();
    }

    public function setIsDeleted($isDeleted)
    {
        $this->__load();
        return parent::setIsDeleted($isDeleted);
    }

    public function getIsDeleted()
    {
        $this->__load();
        return parent::getIsDeleted();
    }

    public function setUsers(\Conjoon\Data\Entity\User\UserEntity $user)
    {
        $this->__load();
        return parent::setUsers($user);
    }

    public function getUsers()
    {
        $this->__load();
        return parent::getUsers();
    }

    public function setGroupwareEmailItems(\Conjoon\Data\Entity\Mail\MessageEntity $groupwareEmailItems)
    {
        $this->__load();
        return parent::setGroupwareEmailItems($groupwareEmailItems);
    }

    public function getGroupwareEmailItems()
    {
        $this->__load();
        return parent::getGroupwareEmailItems();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'isRead', 'isSpam', 'isDeleted', 'groupwareEmailItems', 'users');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }

    }
}