<?xml version="1.0"?>
<!--
 conjoon
 (c) 2002-2012 siteartwork.de/conjoon.org
 licensing@conjoon.org

 $Author$
 $Id$
 $Date$
 $Revision$
 $LastChangedDate$
 $LastChangedBy$
 $URL$
-->

<!--
 Invoke this build by calling: phing deploy
 Build file responsible for upload packed files to server and move
 previous/current releases into archive (on server).
 When specifying properties via -D option(i.e. automated deploying), make sure
 you pass the option "deploy.force=1" so that you do not get prompted
 for input which would possible break an automated deployment

 WARNING!
 This build file is a sub-task and will not rebuild the project. In order
 to rebuild the project, use the build.xml found in this folder which will
 also call this build file.

 @author Thorsten Suckow-Homberg <tsuckow@conjoon.org>
-->

<project name="conjoon-deploy" default="collect_info" basedir="./">

    <if>
        <available file="${file.tmpProperties}" />
        <then>
            <echo>Loading props</echo>
            <property file="${file.tmpProperties}" />
        </then>
        <else>
            <fail message="Property file not available" />
        </else>
    </if>

    <if>
        <not>
            <equals arg1="${global.packed}" arg2="1" />
        </not>
        <then>
            <fail>Did you call pack?</fail>
        </then>
    </if>

<!--.............................................................................
/////////////// TASK COLLECTING DEPLOY RELATED INFO \\\\\\\\\\\\\\\\\\\\\\\\\\\\
..............................................................................-->
    <target name="collect_info">
        <property file="${file.tmpProperties}" />
        <property name="deploy.continue" value="yes" />

        <!-- current -->
        <if>
            <not>
                <isset property="deploy.upload.target_dir" />
            </not>
            <then>
                <property name="deploy.force" value="0" />
                <propertyprompt
                    propertyName="deploy.upload.target_dir"
                    defaultValue="/tmp"
                    promptText="Enter the target directory for the packed files"
                />
            </then>
        </if>

        <!-- previous -->
        <if>
            <not>
                <isset property="deploy.upload.previous_dir" />
            </not>
            <then>
                <property name="deploy.force" value="0" />
                <propertyprompt
                    propertyName="deploy.upload.previous_dir"
                    defaultValue="/tmp"
                    promptText="Enter the directory where previous releases get stored (not archived!)"
                />
            </then>
        </if>

        <!-- release -->
        <if>
            <not>
                <isset property="deploy.upload.archive_dir" />
            </not>
            <then>
            <property name="deploy.force" value="0" />
                <propertyprompt
                    propertyName="deploy.upload.archive_dir"
                    defaultValue="/tmp"
                    promptText="Enter the directory where releases get archived"
                />
            </then>
        </if>

        <!-- USER CREDENTIALS -->
        <if>
            <not>
                <isset property="deploy.host.address" />
            </not>
            <then>
                <property name="deploy.force" value="0" />
                <propertyprompt
                    propertyName="deploy.host.port"
                    defaultValue="22"
                    promptText="Enter the port of the server to connect to"
                />
                <propertyprompt
                    propertyName="deploy.host.user"
                    defaultValue="anonymous"
                    promptText="Enter the user name for connecting with the server"
                />
                <propertyprompt
                    propertyName="deploy.host.password"
                    defaultValue="*"
                    promptText="Enter the password for authentication"
                />
                <propertyprompt
                    propertyName="deploy.host.address"
                    defaultValue="127.0.0.1"
                    promptText="Enter the name or address of the server to connect to"
                />
            </then>
        </if>

        <if>
            <not>
                <equals arg1="${deploy.force}" arg2="1" />
            </not>
            <then>
                <echo>-------------------------------------</echo>
                <echo>All data has been collected. Please review the information</echo>
                <echo>you provided.</echo>
                <echo>Directory information:</echo>
                <echo>----------------------</echo>
                <echo>Directory for current release: ${deploy.upload.target_dir}</echo>
                <echo>Directory for previous release: ${deploy.upload.previous_dir}</echo>
                <echo>Archived releases: ${deploy.upload.archive_dir}</echo>
                <echo>Server information:</echo>
                <echo>----------------------</echo>
                <echo>Server address: ${deploy.host.address}</echo>
                <echo>Server port: ${deploy.host.port}</echo>
                <echo>Server user: ${deploy.host.user}</echo>
                <echo>Server password: ****</echo>
                <propertyprompt
                    propertyName="deploy.continue"
                    defaultValue="n"
                    promptText="Type 'yes' to continue. Anything else cancels the deploy process"
                />
            </then>
        </if>

        <if>
            <equals arg1="${deploy.continue}" arg2="yes" />
            <then>
                <echo message="Starting deploy..." />
            </then>
            <else>
                <fail message="User canceled!" />
            </else>
        </if>

        <phingcall target="deploy_release" />
    </target>
<!--.............................................................................
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/////////////////////////////////////////////
..............................................................................-->


<!--.............................................................................
//////////////////////// TASK FORINVOKING UPLOAD \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
..............................................................................-->
    <target name="deploy_release">
        <property file="${file.tmpProperties}" />
        <phingcall target="ssh_task" />
    </target>
<!--.............................................................................
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/////////////////////////////////////////////
..............................................................................-->


<!--.............................................................................
//////////////// TASK FOR UPLOADING PACKED FILES \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
..............................................................................-->
    <target name="ssh_task">
        <property file="${file.tmpProperties}" />
        <echo>Moving previous releases and indicating that we're busy...</echo>
        <ssh username="${deploy.host.user}"
            password="${deploy.host.password}"
            port="${deploy.host.port}" host="${deploy.host.address}"
            command="
                cd ${deploy.upload.previous_dir};
                mv ./*.* ${deploy.upload.archive_dir};
                cd ${deploy.upload.target_dir};
                mv ./*.* ${deploy.upload.previous_dir};
                touch ${deploy.upload.target_dir}/busy.lock;
            "
        />
        <echo>Uploading packed files. This could take a while...</echo>
        <scp username="${deploy.host.user}"
            password="${deploy.host.password}"
            port="${deploy.host.port}" host="${deploy.host.address}"
            todir="${deploy.upload.target_dir}"
        >
            <fileset dir="./build/packed" />
        </scp>
        <echo>Removing locks...</echo>
        <ssh username="${deploy.host.user}"
            password="${deploy.host.password}"
            port="${deploy.host.port}" host="${deploy.host.address}"
            command="
                cd ${deploy.upload.target_dir};
                rm ${deploy.upload.target_dir}/busy.lock;
            "
        />
        <echo>Have fun!</echo>
    </target>
<!--.............................................................................
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\/////////////////////////////////////////////
..............................................................................-->

</project>
